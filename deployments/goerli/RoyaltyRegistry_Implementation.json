{
  "address": "0x0C4FE43Fb5A3A82C759b5A53f76Af8fF084953D4",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "oldBaseContractURI",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "newBaseContractURI",
          "type": "string"
        }
      ],
      "name": "BaseContractURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_oldAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "CollectionAuthorizedSignerAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_oldAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "CollectionManagerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_oldAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "CollectionOwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "oldRate",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "newRate",
          "type": "uint96"
        }
      ],
      "name": "DefaultRoyaltyRatePercentageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldFactory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newFactory",
          "type": "address"
        }
      ],
      "name": "ModelFactoryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newReceiver",
          "type": "address"
        }
      ],
      "name": "ReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "_royaltyRate",
          "type": "uint96"
        }
      ],
      "name": "RoyaltySetForCollection",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_RATE_ROYALTY",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseContractURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionSignerAddress",
          "type": "address"
        }
      ],
      "name": "changeCollectionAuthorizedSignerAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionManager",
          "type": "address"
        }
      ],
      "name": "changeCollectionManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collectionOwner",
          "type": "address"
        }
      ],
      "name": "changeCollectionOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseContractURI",
          "type": "string"
        }
      ],
      "name": "changeContractURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint96",
          "name": "_newDefaultRate",
          "type": "uint96"
        }
      ],
      "name": "changeDefaultRoyaltyRatePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newModelFactory",
          "type": "address"
        }
      ],
      "name": "changeModelFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newReceiver",
          "type": "address"
        }
      ],
      "name": "changeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectionAuthorizedSignerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectionManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collectionOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultRoyaltyRatePercentage",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractURIForToken",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_royaltyRatePercentage",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_defaultRateRoyaltyPercentage",
          "type": "uint96"
        },
        {
          "internalType": "address",
          "name": "_collectionOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collectionManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collectionAuthorizedSignerAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "modelFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "royaltiesSet",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSet",
          "type": "bool"
        },
        {
          "internalType": "uint96",
          "name": "royaltyRateForCollection",
          "type": "uint96"
        },
        {
          "internalType": "address",
          "name": "royaltyReceiver",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_royaltyRate",
          "type": "uint96"
        },
        {
          "internalType": "address",
          "name": "_royaltyReceiver",
          "type": "address"
        }
      ],
      "name": "setRoyaltyRateForCollection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint96[]",
          "name": "_royaltyRates",
          "type": "uint96[]"
        },
        {
          "internalType": "address[]",
          "name": "_royaltyReceivers",
          "type": "address[]"
        }
      ],
      "name": "setRoyaltyRateForCollections",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9640908f32ca658ed4526f5a25b8d8c308397e31e68810ec8f842047109b1f1f",
  "receipt": {
    "to": null,
    "from": "0x9af703BDDf6b166B64846599F56b68ada1323b2a",
    "contractAddress": "0x0C4FE43Fb5A3A82C759b5A53f76Af8fF084953D4",
    "transactionIndex": 24,
    "gasUsed": "1452177",
    "logsBloom": "0x
    "blockHash": "0xe65bb78d731124e66b6d13667ae05a7e66da2cb9557f0e8c24bc6de25334ec1c",
    "transactionHash": "0x9640908f32ca658ed4526f5a25b8d8c308397e31e68810ec8f842047109b1f1f",
    "logs": [],
    "blockNumber": 7707985,
    "cumulativeGasUsed": "13699851",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "36b4aa17d76332a7963874727be2e74d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldBaseContractURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newBaseContractURI\",\"type\":\"string\"}],\"name\":\"BaseContractURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"CollectionAuthorizedSignerAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"CollectionManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"CollectionOwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"oldRate\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"newRate\",\"type\":\"uint96\"}],\"name\":\"DefaultRoyaltyRatePercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldFactory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFactory\",\"type\":\"address\"}],\"name\":\"ModelFactoryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReceiver\",\"type\":\"address\"}],\"name\":\"ReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"_royaltyRate\",\"type\":\"uint96\"}],\"name\":\"RoyaltySetForCollection\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_RATE_ROYALTY\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseContractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionSignerAddress\",\"type\":\"address\"}],\"name\":\"changeCollectionAuthorizedSignerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionManager\",\"type\":\"address\"}],\"name\":\"changeCollectionManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionOwner\",\"type\":\"address\"}],\"name\":\"changeCollectionOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseContractURI\",\"type\":\"string\"}],\"name\":\"changeContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_newDefaultRate\",\"type\":\"uint96\"}],\"name\":\"changeDefaultRoyaltyRatePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newModelFactory\",\"type\":\"address\"}],\"name\":\"changeModelFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newReceiver\",\"type\":\"address\"}],\"name\":\"changeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectionAuthorizedSignerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectionManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectionOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultRoyaltyRatePercentage\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractURIForToken\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_royaltyRatePercentage\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_defaultRateRoyaltyPercentage\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_collectionOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collectionManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collectionAuthorizedSignerAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"modelFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"royaltiesSet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"},{\"internalType\":\"uint96\",\"name\":\"royaltyRateForCollection\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_royaltyRate\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_royaltyReceiver\",\"type\":\"address\"}],\"name\":\"setRoyaltyRateForCollection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint96[]\",\"name\":\"_royaltyRates\",\"type\":\"uint96[]\"},{\"internalType\":\"address[]\",\"name\":\"_royaltyReceivers\",\"type\":\"address[]\"}],\"name\":\"setRoyaltyRateForCollections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoyaltySetForCollection(address,uint96)\":{\"details\":\"emitted when royalties set for token.\"}},\"kind\":\"dev\",\"methods\":{\"changeCollectionAuthorizedSignerAddress(address)\":{\"details\":\"Update the authorized signer address.\",\"params\":{\"_collectionSignerAddress\":\"new authorized signer address.\"}},\"changeCollectionManager(address)\":{\"details\":\"Can be called only by the current manager.\",\"params\":{\"_collectionManager\":\"new manager address.\"}},\"changeCollectionOwner(address)\":{\"details\":\"Update the authorized signer address.\",\"params\":{\"_collectionOwner\":\"new authorized signer address.\"}},\"changeContractURI(string)\":{\"details\":\"Update baseContractURI.\",\"params\":{\"_baseContractURI\":\"new base contract URI.\"}},\"changeDefaultRoyaltyRatePercentage(uint96)\":{\"details\":\"setter for defaultRoyaltyRatePercentage\",\"params\":{\"_newDefaultRate\":\"new default rate for royalty.\"}},\"changeModelFactory(address)\":{\"details\":\"setter for model factory address.\",\"params\":{\"_newModelFactory\":\"new Receiver address\"}},\"changeReceiver(address)\":{\"details\":\"setter for receiver address.\",\"params\":{\"_newReceiver\":\"new Receiver address\"}},\"getContractURIForToken()\":{\"details\":\"full contract URI based on collection contract.\",\"returns\":{\"_0\":\"string of full contract uri.\"}},\"getRoyaltyInfo(address)\":{\"details\":\"royalty info for specific token / collection.It will return custom rate for the token, otherwise will return the default one.\",\"params\":{\"_token\":\"address of token / collection.\"},\"returns\":{\"_receiver\":\"receiver address.\",\"_royaltyRatePercentage\":\"royalty rate percentage.\"}},\"initialize(address,uint96,address,address,address)\":{\"params\":{\"_defaultRateRoyaltyPercentage\":\"default royalty percentage.\",\"_receiver\":\"receiver address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRoyaltyRateForCollection(address,uint96,address)\":{\"details\":\"set royalty rate for specific collection. Support multiple set. The length of array between tokens & rates must exactly the same.\",\"params\":{\"_royaltyRate\":\"royalty rate.\",\"_token\":\"token address.\"}},\"setRoyaltyRateForCollections(address[],uint96[],address[])\":{\"details\":\"set royalty rate for specific collection. Support multiple set. The length of array between tokens & rates must exactly the same.\",\"params\":{\"_royaltyRates\":\"array of royalty rates.\",\"_tokens\":\"array of token address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"changeCollectionManager(address)\":{\"notice\":\"Setter for manager address.\"},\"changeDefaultRoyaltyRatePercentage(uint96)\":{\"notice\":\"the deafult royalty rate can be 0.\"},\"collectionManager()\":{\"notice\":\"the authorized address who can change some configuration of collections.\"},\"initialize(address,uint96,address,address,address)\":{\"notice\":\"Initialization for upgradeable contract.\"},\"setRoyaltyRateForCollection(address,uint96,address)\":{\"notice\":\"the rate will be applied to all of token ids inside the collection.Owner or factory can perform this function call.\"},\"setRoyaltyRateForCollections(address[],uint96[],address[])\":{\"notice\":\"the rate will be applied to all of token ids inside the collection.only owner can call the multiple set.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/royalty/RoyaltyRegistry.sol\":\"RoyaltyRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"contracts/royalty/RoyaltyRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"./RoyaltyStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\ncontract RoyaltyRegistry is RoyaltyStorage {\\n    /// @dev emitted when royalties set for token.\\n    event RoyaltySetForCollection(address indexed _token, uint96 _royaltyRate);\\n\\n    event ReceiverUpdated(address oldReceiver, address newReceiver);\\n\\n    event ModelFactoryUpdated(address oldFactory, address newFactory);\\n\\n    event DefaultRoyaltyRatePercentageUpdated(uint96 oldRate, uint96 newRate);\\n\\n    event CollectionManagerUpdated(address indexed _oldAddress, address _newAddress);\\n\\n    event CollectionAuthorizedSignerAddressUpdated(address indexed _oldAddress, address _newAddress);\\n\\n    event CollectionOwnerUpdated(address indexed _oldAddress, address _newAddress);\\n\\n    event BaseContractURIUpdated(string oldBaseContractURI, string newBaseContractURI);\\n\\n    modifier onlyOwnerOrFactory() {\\n        require(msg.sender == owner() || msg.sender == modelFactory, \\\"Unauthorized\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @notice Initialization for upgradeable contract.\\n     *\\n     * @param _receiver receiver address.\\n     * @param _defaultRateRoyaltyPercentage default royalty percentage.\\n     *\\n     */\\n    function initialize(\\n        address _receiver,\\n        uint96 _defaultRateRoyaltyPercentage,\\n        address _collectionOwner,\\n        address _collectionManager,\\n        address _collectionAuthorizedSignerAddress\\n    ) external initializer {\\n        require(_receiver != address(0), \\\"Invalid receiver address\\\");\\n        require(_collectionOwner != address(0), \\\"Invalid owner address\\\");\\n        require(_collectionManager != address(0), \\\"Invalid manager address\\\");\\n        require(_collectionAuthorizedSignerAddress != address(0), \\\"Invalid signer address\\\");\\n\\n        receiver = _receiver;\\n        defaultRoyaltyRatePercentage = _defaultRateRoyaltyPercentage;\\n        collectionOwner = _collectionOwner;\\n        collectionManager = _collectionManager;\\n        collectionAuthorizedSignerAddress = _collectionAuthorizedSignerAddress;\\n\\n        __Ownable_init_unchained();\\n    }\\n\\n    /**\\n     * @dev setter for receiver address.\\n     *\\n     * @param _newReceiver new Receiver address\\n     *\\n     */\\n    function changeReceiver(address _newReceiver) external onlyOwner {\\n        require(_newReceiver != address(0), \\\"Invalid address\\\");\\n        address oldReceiver = receiver;\\n        receiver = _newReceiver;\\n\\n        emit ReceiverUpdated(oldReceiver, receiver);\\n    }\\n\\n    /**\\n     * @dev setter for model factory address.\\n     *\\n     * @param _newModelFactory new Receiver address\\n     *\\n     */\\n    function changeModelFactory(address _newModelFactory) external onlyOwner {\\n        require(_newModelFactory != address(0), \\\"Invalid address\\\");\\n        address oldModelFactory = modelFactory;\\n        modelFactory = _newModelFactory;\\n\\n        emit ModelFactoryUpdated(oldModelFactory, modelFactory);\\n    }\\n\\n    /**\\n     * @dev setter for defaultRoyaltyRatePercentage\\n     * @notice the deafult royalty rate can be 0.\\n     *\\n     * @param _newDefaultRate new default rate for royalty.\\n     *\\n     */\\n    function changeDefaultRoyaltyRatePercentage(uint96 _newDefaultRate) external onlyOwner {\\n        require(_newDefaultRate <= MAX_RATE_ROYALTY, \\\"Invalid Rate\\\");\\n        uint96 oldDefaultRoyaltyRatePercentage = defaultRoyaltyRatePercentage;\\n        defaultRoyaltyRatePercentage = _newDefaultRate;\\n\\n        emit DefaultRoyaltyRatePercentageUpdated(oldDefaultRoyaltyRatePercentage, defaultRoyaltyRatePercentage);\\n    }\\n\\n    /**\\n     * @dev set royalty rate for specific collection. Support multiple set. The length of array between tokens & rates must exactly the same.\\n     * @notice the rate will be applied to all of token ids inside the collection.\\n     * @notice only owner can call the multiple set.\\n     *\\n     * @param _tokens array of token address.\\n     * @param _royaltyRates array of royalty rates.\\n     */\\n    function setRoyaltyRateForCollections(\\n        address[] calldata _tokens,\\n        uint96[] calldata _royaltyRates,\\n        address[] calldata _royaltyReceivers\\n    ) external onlyOwner {\\n        require(_tokens.length == _royaltyRates.length, \\\"Mismatch royaltyRates length\\\");\\n        require(_tokens.length == _royaltyReceivers.length, \\\"Mismatch royaltyReceivers length\\\");\\n\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            _setRoyaltyForCollection(_tokens[i], _royaltyRates[i], _royaltyReceivers[i]);\\n        }\\n    }\\n\\n    /**\\n     * @dev set royalty rate for specific collection. Support multiple set. The length of array between tokens & rates must exactly the same.\\n     * @notice the rate will be applied to all of token ids inside the collection.\\n     * @notice Owner or factory can perform this function call.\\n     *\\n     * @param _token token address.\\n     * @param _royaltyRate royalty rate.\\n     */\\n    function setRoyaltyRateForCollection(\\n        address _token,\\n        uint96 _royaltyRate,\\n        address _royaltyReceiver\\n    ) external onlyOwnerOrFactory {\\n        _setRoyaltyForCollection(_token, _royaltyRate, _royaltyReceiver);\\n    }\\n\\n    /**\\n     * @dev internal setter royalty rate for collection.\\n     *\\n     * @param _token token / collection address.\\n     * @param _royaltyRate royalty rate for that particular collection.\\n     */\\n    function _setRoyaltyForCollection(\\n        address _token,\\n        uint96 _royaltyRate,\\n        address _royaltyReceiver\\n    ) private {\\n        require(_token != address(0), \\\"Invalid token\\\");\\n        require(_royaltyReceiver != address(0), \\\"Invalid receiver address\\\");\\n        require(_royaltyRate <= MAX_RATE_ROYALTY, \\\"Invalid Rate\\\");\\n\\n        RoyaltySet memory _royaltySet = RoyaltySet({\\n            isSet: true,\\n            royaltyRateForCollection: _royaltyRate,\\n            royaltyReceiver: _royaltyReceiver\\n        });\\n\\n        royaltiesSet[_token] = _royaltySet;\\n\\n        emit RoyaltySetForCollection(_token, _royaltyRate);\\n    }\\n\\n    /**\\n     * @dev royalty info for specific token / collection.\\n     * @dev It will return custom rate for the token, otherwise will return the default one.\\n     *\\n     * @param _token address of token / collection.\\n     *\\n     * @return _receiver receiver address.\\n     * @return _royaltyRatePercentage royalty rate percentage.\\n     */\\n    function getRoyaltyInfo(address _token) external view returns (address _receiver, uint96 _royaltyRatePercentage) {\\n        RoyaltySet memory _royaltySet = royaltiesSet[_token];\\n        return (\\n            _royaltySet.royaltyReceiver != address(0) ? _royaltySet.royaltyReceiver : receiver,\\n            _royaltySet.isSet ? _royaltySet.royaltyRateForCollection : defaultRoyaltyRatePercentage\\n        );\\n    }\\n\\n    /**\\n     * @dev Update the authorized signer address.\\n     *\\n     * @param _collectionSignerAddress new authorized signer address.\\n     */\\n    function changeCollectionAuthorizedSignerAddress(address _collectionSignerAddress) external onlyOwner {\\n        require(_collectionSignerAddress != address(0), \\\"Invalid address\\\");\\n        address oldSignerAddress = collectionAuthorizedSignerAddress;\\n        collectionAuthorizedSignerAddress = _collectionSignerAddress;\\n        emit CollectionAuthorizedSignerAddressUpdated(oldSignerAddress, collectionAuthorizedSignerAddress);\\n    }\\n\\n    /**\\n     * @notice Setter for manager address.\\n     * @dev Can be called only by the current manager.\\n     *\\n     * @param _collectionManager new manager address.\\n     */\\n    function changeCollectionManager(address _collectionManager) external onlyOwner {\\n        require(_collectionManager != address(0), \\\"Invalid address\\\");\\n        address oldManagerAddress = collectionManager;\\n        collectionManager = _collectionManager;\\n\\n        emit CollectionManagerUpdated(oldManagerAddress, collectionManager);\\n    }\\n\\n    /**\\n     * @dev Update the authorized signer address.\\n     *\\n     * @param _collectionOwner new authorized signer address.\\n     */\\n    function changeCollectionOwner(address _collectionOwner) external onlyOwner {\\n        require(_collectionOwner != address(0), \\\"Invalid address\\\");\\n        address oldOwner = collectionOwner;\\n        collectionOwner = _collectionOwner;\\n        emit CollectionOwnerUpdated(oldOwner, collectionOwner);\\n    }\\n\\n    /**\\n     * @dev Update baseContractURI.\\n     *\\n     * @param _baseContractURI new base contract URI.\\n     */\\n    function changeContractURI(string memory _baseContractURI) external onlyOwner {\\n        string memory oldBaseContractURI = baseContractURI;\\n        baseContractURI = _baseContractURI;\\n        emit BaseContractURIUpdated(oldBaseContractURI, baseContractURI);\\n    }\\n\\n    /**\\n     * @dev full contract URI based on collection contract.\\n     *\\n     * @return string of full contract uri.\\n     */\\n    function getContractURIForToken() external view returns (string memory) {\\n        return string(abi.encodePacked(baseContractURI, Strings.toHexString(msg.sender)));\\n    }\\n}\\n\",\"keccak256\":\"0x905d4890ea64b42edf188d792b92a5bf8de4041d537efc77f54664bdeac7a1d8\",\"license\":\"MIT\"},\"contracts/royalty/RoyaltyStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\n\\ncontract RoyaltyStorage is OwnableUpgradeable {\\n    struct RoyaltySet {\\n        bool isSet;\\n        uint96 royaltyRateForCollection;\\n        address royaltyReceiver;\\n    }\\n\\n    /// @dev storing royalty amount percentages for particular collection.\\n    mapping(address => RoyaltySet) public royaltiesSet;\\n\\n    /// @dev default royalty percentage;\\n    uint96 public defaultRoyaltyRatePercentage;\\n\\n    /// @dev receiver address of royalty.\\n    address public receiver;\\n\\n    /// @dev model factory address.\\n    address public modelFactory;\\n\\n    uint96 public constant MAX_RATE_ROYALTY = 1000;\\n\\n    /// @notice the authorized address who can change some configuration of collections.\\n    address public collectionManager;\\n\\n    /// @dev authorized address who can sign the arbitrary data to allow minting for collections.\\n    address public collectionAuthorizedSignerAddress;\\n\\n    /// @dev owner for collections.\\n    address public collectionOwner;\\n\\n    /// @dev custom metadata to be used for opensea\\n    string public baseContractURI;\\n}\\n\",\"keccak256\":\"0x04f128e542f4f2a24e43424f1d7af96bae4edc1d32e7e9f51f8766a1a83aa2bc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061194c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063ad84eaca1161007c578063ad84eaca14610350578063d06ab78814610363578063d7ef940914610376578063df727d3b14610389578063f2fde38b1461039c578063f7260d3e146103af57600080fd5b8063715018a6146103005780637b2e70081461030857806380f2152e146103115780638ce6467d146103195780638da5cb5b1461032c5780639fdf84691461033d57600080fd5b8063547e3f0611610115578063547e3f061461028c5780635699b9041461029f5780635af72f47146102b2578063647a5c85146102c75780636b51fd01146102da5780636c425127146102ed57600080fd5b80630431c7ef1461015d5780631f08b6481461018d578063376a06f4146101ff5780633e6425db146102395780634925536e146102645780634f53e22614610279575b600080fd5b606754610170906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d161019b366004611483565b6065602052600090815260409020805460019091015460ff82169161010090046001600160601b0316906001600160a01b031683565b6040805193151584526001600160601b0390921660208401526001600160a01b031690820152606001610184565b61021261020d366004611483565b6103c9565b604080516001600160a01b0390931683526001600160601b03909116602083015201610184565b60665461024c906001600160601b031681565b6040516001600160601b039091168152602001610184565b610277610272366004611543565b610467565b005b610277610287366004611483565b6105df565b61027761029a366004611483565b610668565b6102776102ad3660046115d9565b610706565b6102ba6107e5565b6040516101849190611749565b6102776102d536600461149d565b610817565b6102776102e8366004611483565b610885565b6102776102fb3660046114df565b610906565b610277610bc6565b61024c6103e881565b6102ba610bda565b610277610327366004611683565b610c68565b6033546001600160a01b0316610170565b606854610170906001600160a01b031681565b606954610170906001600160a01b031681565b610277610371366004611483565b610d19565b610277610384366004611483565b610d9a565b606a54610170906001600160a01b031681565b6102776103aa366004611483565b610e22565b60665461017090600160601b90046001600160a01b031681565b6001600160a01b0381811660009081526065602090815260408083208151606081018352815460ff81161515825261010090046001600160601b03169381019390935260010154909316928101839052909182919061043a57606654600160601b90046001600160a01b0316610440565b80604001515b8151610457576066546001600160601b031661045d565b81602001515b9250925050915091565b61046f610e9b565b8483146104c35760405162461bcd60e51b815260206004820152601c60248201527f4d69736d6174636820726f79616c74795261746573206c656e6774680000000060448201526064015b60405180910390fd5b8481146105125760405162461bcd60e51b815260206004820181905260248201527f4d69736d6174636820726f79616c7479526563656976657273206c656e67746860448201526064016104ba565b60005b858110156105d6576105c487878381811061054057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105559190611483565b86868481811061057557634e487b7160e01b600052603260045260246000fd5b905060200201602081019061058a9190611683565b8585858181106105aa57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105bf9190611483565b610ef5565b806105ce816118cf565b915050610515565b50505050505050565b6105e7610e9b565b6001600160a01b03811661060d5760405162461bcd60e51b81526004016104ba906117ed565b606a80546001600160a01b038381166001600160a01b031983168117909355604051928352169081907ff8ee87253d4d0a5a98583aa34e04b7aec86bf4d623d7a050e77c3736f02f6a57906020015b60405180910390a25050565b610670610e9b565b6001600160a01b0381166106965760405162461bcd60e51b81526004016104ba906117ed565b606680546001600160a01b03838116600160601b9081026001600160601b038416179384905560408051938290048316808552919094049091166020830152917fbda2bcccbfa5ae883ab7d9f03480ab68fe68e9200c9b52c0c47abc21d2c90ec991015b60405180910390a15050565b61070e610e9b565b6000606b805461071d90611894565b80601f016020809104026020016040519081016040528092919081815260200182805461074990611894565b80156107965780601f1061076b57610100808354040283529160200191610796565b820191906000526020600020905b81548152906001019060200180831161077957829003601f168201915b505085519394506107b293606b9350602087019250905061136d565b507f0729408ee4b5e546758db0db83ca9d52562eba03029227cfe3e5ab960fa511a681606b6040516106fa92919061175c565b6060606b6107f2336110a6565b6040516020016108039291906116c9565b604051602081830303815290604052905090565b6033546001600160a01b031633148061083a57506067546001600160a01b031633145b6108755760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064016104ba565b610880838383610ef5565b505050565b61088d610e9b565b6001600160a01b0381166108b35760405162461bcd60e51b81526004016104ba906117ed565b606880546001600160a01b038381166001600160a01b031983168117909355604051928352169081907f5a3b004e7cb1dd9c21394cee4a9d3cd503918330fc953652a23ca1e5fa6e0d219060200161065c565b600054610100900460ff16158080156109265750600054600160ff909116105b806109405750303b158015610940575060005460ff166001145b6109a35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104ba565b6000805460ff1916600117905580156109c6576000805461ff0019166101001790555b6001600160a01b038616610a175760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964207265636569766572206164647265737360401b60448201526064016104ba565b6001600160a01b038416610a655760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f776e6572206164647265737360581b60448201526064016104ba565b6001600160a01b038316610abb5760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206d616e61676572206164647265737300000000000000000060448201526064016104ba565b6001600160a01b038216610b0a5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964207369676e6572206164647265737360501b60448201526064016104ba565b6001600160601b0385166001600160a01b03808816600160601b026bffffffffffffffffffffffff191691909117606655606a80548683166001600160a01b031991821617909155606880548684169083161790556069805492851692909116919091179055610b786110c2565b8015610bbe576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b610bce610e9b565b610bd86000611132565b565b606b8054610be790611894565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1390611894565b8015610c605780601f10610c3557610100808354040283529160200191610c60565b820191906000526020600020905b815481529060010190602001808311610c4357829003601f168201915b505050505081565b610c70610e9b565b6103e86001600160601b0382161115610cba5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964205261746560a01b60448201526064016104ba565b606680546001600160601b038381166bffffffffffffffffffffffff1983168117909355604080519190921680825260208201939093527f7392c3db674e96a805158bdfac5363922c74a8241afb1eedc887ec13d02f521391016106fa565b610d21610e9b565b6001600160a01b038116610d475760405162461bcd60e51b81526004016104ba906117ed565b606980546001600160a01b038381166001600160a01b031983168117909355604051928352169081907fa26f2fe3350d3c4c094a3f4310c3e89e82dd8e81b73ad253a8abfcae54c03d909060200161065c565b610da2610e9b565b6001600160a01b038116610dc85760405162461bcd60e51b81526004016104ba906117ed565b606780546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f51ef4f53c3dd1a65db829ec538a7e8bc41f56ed6e583b5e24e43986223a11ed291016106fa565b610e2a610e9b565b6001600160a01b038116610e8f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ba565b610e9881611132565b50565b6033546001600160a01b03163314610bd85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ba565b6001600160a01b038316610f3b5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b60448201526064016104ba565b6001600160a01b038116610f8c5760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964207265636569766572206164647265737360401b60448201526064016104ba565b6103e86001600160601b0383161115610fd65760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964205261746560a01b60448201526064016104ba565b6040805160608101825260018082526001600160601b0385811660208085018281526001600160a01b038881168789019081528b82166000818152606586528a90208951815495516cffffffffffffffffffffffffff199096169015156cffffffffffffffffffffffff001916176101009590981694909402969096178355519190950180546001600160a01b0319169190951617909355935193845291927f25b3ff953c8d46ef87728ec49843598f7f7586628c5012d65cbd1c68c156a298910160405180910390a250505050565b60606110bc6001600160a01b0383166014611184565b92915050565b600054610100900460ff1661112d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104ba565b610bd8335b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600061119383600261182e565b61119e906002611816565b67ffffffffffffffff8111156111c457634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156111ee576020820181803683370190505b509050600360fc1b8160008151811061121757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061125457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061127884600261182e565b611283906001611816565b90505b6001811115611317576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106112c557634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106112e957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936113108161187d565b9050611286565b5083156113665760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104ba565b9392505050565b82805461137990611894565b90600052602060002090601f01602090048101928261139b57600085556113e1565b82601f106113b457805160ff19168380011785556113e1565b828001600101855582156113e1579182015b828111156113e15782518255916020019190600101906113c6565b506113ed9291506113f1565b5090565b5b808211156113ed57600081556001016113f2565b80356001600160a01b038116811461141d57600080fd5b919050565b60008083601f840112611433578081fd5b50813567ffffffffffffffff81111561144a578182fd5b6020830191508360208260051b850101111561146557600080fd5b9250929050565b80356001600160601b038116811461141d57600080fd5b600060208284031215611494578081fd5b61136682611406565b6000806000606084860312156114b1578182fd5b6114ba84611406565b92506114c86020850161146c565b91506114d660408501611406565b90509250925092565b600080600080600060a086880312156114f6578081fd5b6114ff86611406565b945061150d6020870161146c565b935061151b60408701611406565b925061152960608701611406565b915061153760808701611406565b90509295509295909350565b6000806000806000806060878903121561155b578081fd5b863567ffffffffffffffff80821115611572578283fd5b61157e8a838b01611422565b90985096506020890135915080821115611596578283fd5b6115a28a838b01611422565b909650945060408901359150808211156115ba578283fd5b506115c789828a01611422565b979a9699509497509295939492505050565b6000602082840312156115ea578081fd5b813567ffffffffffffffff80821115611601578283fd5b818401915084601f830112611614578283fd5b81358181111561162657611626611900565b604051601f8201601f19908116603f0116810190838211818310171561164e5761164e611900565b81604052828152876020848701011115611666578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215611694578081fd5b6113668261146c565b600081518084526116b581602086016020860161184d565b601f01601f19169290920160200192915050565b60008084546116d781611894565b600182811680156116ef57600181146117005761172c565b60ff1984168752828701945061172c565b8886526020808720875b858110156117235781548a82015290840190820161170a565b50505082870194505b50505050835161174081836020880161184d565b01949350505050565b602081526000611366602083018461169d565b60408152600061176f604083018561169d565b60208382038185015282855461178481611894565b8085526001828116801561179f57600181146117b3576117de565b60ff198416878701526040870194506117de565b898852858820885b848110156117d65781548982018901529083019087016117bb565b880187019550505b50929998505050505050505050565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b60008219821115611829576118296118ea565b500190565b6000816000190483118215151615611848576118486118ea565b500290565b60005b83811015611868578181015183820152602001611850565b83811115611877576000848401525b50505050565b60008161188c5761188c6118ea565b506000190190565b600181811c908216806118a857607f821691505b602082108114156118c957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156118e3576118e36118ea565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200024fb06d39b784783037274f95b8f3cb2bd3d058870b198a4ce21dea553038864736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063ad84eaca1161007c578063ad84eaca14610350578063d06ab78814610363578063d7ef940914610376578063df727d3b14610389578063f2fde38b1461039c578063f7260d3e146103af57600080fd5b8063715018a6146103005780637b2e70081461030857806380f2152e146103115780638ce6467d146103195780638da5cb5b1461032c5780639fdf84691461033d57600080fd5b8063547e3f0611610115578063547e3f061461028c5780635699b9041461029f5780635af72f47146102b2578063647a5c85146102c75780636b51fd01146102da5780636c425127146102ed57600080fd5b80630431c7ef1461015d5780631f08b6481461018d578063376a06f4146101ff5780633e6425db146102395780634925536e146102645780634f53e22614610279575b600080fd5b606754610170906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d161019b366004611483565b6065602052600090815260409020805460019091015460ff82169161010090046001600160601b0316906001600160a01b031683565b6040805193151584526001600160601b0390921660208401526001600160a01b031690820152606001610184565b61021261020d366004611483565b6103c9565b604080516001600160a01b0390931683526001600160601b03909116602083015201610184565b60665461024c906001600160601b031681565b6040516001600160601b039091168152602001610184565b610277610272366004611543565b610467565b005b610277610287366004611483565b6105df565b61027761029a366004611483565b610668565b6102776102ad3660046115d9565b610706565b6102ba6107e5565b6040516101849190611749565b6102776102d536600461149d565b610817565b6102776102e8366004611483565b610885565b6102776102fb3660046114df565b610906565b610277610bc6565b61024c6103e881565b6102ba610bda565b610277610327366004611683565b610c68565b6033546001600160a01b0316610170565b606854610170906001600160a01b031681565b606954610170906001600160a01b031681565b610277610371366004611483565b610d19565b610277610384366004611483565b610d9a565b606a54610170906001600160a01b031681565b6102776103aa366004611483565b610e22565b60665461017090600160601b90046001600160a01b031681565b6001600160a01b0381811660009081526065602090815260408083208151606081018352815460ff81161515825261010090046001600160601b03169381019390935260010154909316928101839052909182919061043a57606654600160601b90046001600160a01b0316610440565b80604001515b8151610457576066546001600160601b031661045d565b81602001515b9250925050915091565b61046f610e9b565b8483146104c35760405162461bcd60e51b815260206004820152601c60248201527f4d69736d6174636820726f79616c74795261746573206c656e6774680000000060448201526064015b60405180910390fd5b8481146105125760405162461bcd60e51b815260206004820181905260248201527f4d69736d6174636820726f79616c7479526563656976657273206c656e67746860448201526064016104ba565b60005b858110156105d6576105c487878381811061054057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105559190611483565b86868481811061057557634e487b7160e01b600052603260045260246000fd5b905060200201602081019061058a9190611683565b8585858181106105aa57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906105bf9190611483565b610ef5565b806105ce816118cf565b915050610515565b50505050505050565b6105e7610e9b565b6001600160a01b03811661060d5760405162461bcd60e51b81526004016104ba906117ed565b606a80546001600160a01b038381166001600160a01b031983168117909355604051928352169081907ff8ee87253d4d0a5a98583aa34e04b7aec86bf4d623d7a050e77c3736f02f6a57906020015b60405180910390a25050565b610670610e9b565b6001600160a01b0381166106965760405162461bcd60e51b81526004016104ba906117ed565b606680546001600160a01b03838116600160601b9081026001600160601b038416179384905560408051938290048316808552919094049091166020830152917fbda2bcccbfa5ae883ab7d9f03480ab68fe68e9200c9b52c0c47abc21d2c90ec991015b60405180910390a15050565b61070e610e9b565b6000606b805461071d90611894565b80601f016020809104026020016040519081016040528092919081815260200182805461074990611894565b80156107965780601f1061076b57610100808354040283529160200191610796565b820191906000526020600020905b81548152906001019060200180831161077957829003601f168201915b505085519394506107b293606b9350602087019250905061136d565b507f0729408ee4b5e546758db0db83ca9d52562eba03029227cfe3e5ab960fa511a681606b6040516106fa92919061175c565b6060606b6107f2336110a6565b6040516020016108039291906116c9565b604051602081830303815290604052905090565b6033546001600160a01b031633148061083a57506067546001600160a01b031633145b6108755760405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b60448201526064016104ba565b610880838383610ef5565b505050565b61088d610e9b565b6001600160a01b0381166108b35760405162461bcd60e51b81526004016104ba906117ed565b606880546001600160a01b038381166001600160a01b031983168117909355604051928352169081907f5a3b004e7cb1dd9c21394cee4a9d3cd503918330fc953652a23ca1e5fa6e0d219060200161065c565b600054610100900460ff16158080156109265750600054600160ff909116105b806109405750303b158015610940575060005460ff166001145b6109a35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104ba565b6000805460ff1916600117905580156109c6576000805461ff0019166101001790555b6001600160a01b038616610a175760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964207265636569766572206164647265737360401b60448201526064016104ba565b6001600160a01b038416610a655760405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f776e6572206164647265737360581b60448201526064016104ba565b6001600160a01b038316610abb5760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206d616e61676572206164647265737300000000000000000060448201526064016104ba565b6001600160a01b038216610b0a5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964207369676e6572206164647265737360501b60448201526064016104ba565b6001600160601b0385166001600160a01b03808816600160601b026bffffffffffffffffffffffff191691909117606655606a80548683166001600160a01b031991821617909155606880548684169083161790556069805492851692909116919091179055610b786110c2565b8015610bbe576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b610bce610e9b565b610bd86000611132565b565b606b8054610be790611894565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1390611894565b8015610c605780601f10610c3557610100808354040283529160200191610c60565b820191906000526020600020905b815481529060010190602001808311610c4357829003601f168201915b505050505081565b610c70610e9b565b6103e86001600160601b0382161115610cba5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964205261746560a01b60448201526064016104ba565b606680546001600160601b038381166bffffffffffffffffffffffff1983168117909355604080519190921680825260208201939093527f7392c3db674e96a805158bdfac5363922c74a8241afb1eedc887ec13d02f521391016106fa565b610d21610e9b565b6001600160a01b038116610d475760405162461bcd60e51b81526004016104ba906117ed565b606980546001600160a01b038381166001600160a01b031983168117909355604051928352169081907fa26f2fe3350d3c4c094a3f4310c3e89e82dd8e81b73ad253a8abfcae54c03d909060200161065c565b610da2610e9b565b6001600160a01b038116610dc85760405162461bcd60e51b81526004016104ba906117ed565b606780546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f51ef4f53c3dd1a65db829ec538a7e8bc41f56ed6e583b5e24e43986223a11ed291016106fa565b610e2a610e9b565b6001600160a01b038116610e8f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104ba565b610e9881611132565b50565b6033546001600160a01b03163314610bd85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104ba565b6001600160a01b038316610f3b5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b60448201526064016104ba565b6001600160a01b038116610f8c5760405162461bcd60e51b8152602060048201526018602482015277496e76616c6964207265636569766572206164647265737360401b60448201526064016104ba565b6103e86001600160601b0383161115610fd65760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964205261746560a01b60448201526064016104ba565b6040805160608101825260018082526001600160601b0385811660208085018281526001600160a01b038881168789019081528b82166000818152606586528a90208951815495516cffffffffffffffffffffffffff199096169015156cffffffffffffffffffffffff001916176101009590981694909402969096178355519190950180546001600160a01b0319169190951617909355935193845291927f25b3ff953c8d46ef87728ec49843598f7f7586628c5012d65cbd1c68c156a298910160405180910390a250505050565b60606110bc6001600160a01b0383166014611184565b92915050565b600054610100900460ff1661112d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016104ba565b610bd8335b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060600061119383600261182e565b61119e906002611816565b67ffffffffffffffff8111156111c457634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156111ee576020820181803683370190505b509050600360fc1b8160008151811061121757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061125457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600061127884600261182e565b611283906001611816565b90505b6001811115611317576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106112c557634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106112e957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936113108161187d565b9050611286565b5083156113665760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104ba565b9392505050565b82805461137990611894565b90600052602060002090601f01602090048101928261139b57600085556113e1565b82601f106113b457805160ff19168380011785556113e1565b828001600101855582156113e1579182015b828111156113e15782518255916020019190600101906113c6565b506113ed9291506113f1565b5090565b5b808211156113ed57600081556001016113f2565b80356001600160a01b038116811461141d57600080fd5b919050565b60008083601f840112611433578081fd5b50813567ffffffffffffffff81111561144a578182fd5b6020830191508360208260051b850101111561146557600080fd5b9250929050565b80356001600160601b038116811461141d57600080fd5b600060208284031215611494578081fd5b61136682611406565b6000806000606084860312156114b1578182fd5b6114ba84611406565b92506114c86020850161146c565b91506114d660408501611406565b90509250925092565b600080600080600060a086880312156114f6578081fd5b6114ff86611406565b945061150d6020870161146c565b935061151b60408701611406565b925061152960608701611406565b915061153760808701611406565b90509295509295909350565b6000806000806000806060878903121561155b578081fd5b863567ffffffffffffffff80821115611572578283fd5b61157e8a838b01611422565b90985096506020890135915080821115611596578283fd5b6115a28a838b01611422565b909650945060408901359150808211156115ba578283fd5b506115c789828a01611422565b979a9699509497509295939492505050565b6000602082840312156115ea578081fd5b813567ffffffffffffffff80821115611601578283fd5b818401915084601f830112611614578283fd5b81358181111561162657611626611900565b604051601f8201601f19908116603f0116810190838211818310171561164e5761164e611900565b81604052828152876020848701011115611666578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215611694578081fd5b6113668261146c565b600081518084526116b581602086016020860161184d565b601f01601f19169290920160200192915050565b60008084546116d781611894565b600182811680156116ef57600181146117005761172c565b60ff1984168752828701945061172c565b8886526020808720875b858110156117235781548a82015290840190820161170a565b50505082870194505b50505050835161174081836020880161184d565b01949350505050565b602081526000611366602083018461169d565b60408152600061176f604083018561169d565b60208382038185015282855461178481611894565b8085526001828116801561179f57600181146117b3576117de565b60ff198416878701526040870194506117de565b898852858820885b848110156117d65781548982018901529083019087016117bb565b880187019550505b50929998505050505050505050565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b60008219821115611829576118296118ea565b500190565b6000816000190483118215151615611848576118486118ea565b500290565b60005b83811015611868578181015183820152602001611850565b83811115611877576000848401525b50505050565b60008161188c5761188c6118ea565b506000190190565b600181811c908216806118a857607f821691505b602082108114156118c957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156118e3576118e36118ea565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200024fb06d39b784783037274f95b8f3cb2bd3d058870b198a4ce21dea553038864736f6c63430008040033",
  "devdoc": {
    "events": {
      "RoyaltySetForCollection(address,uint96)": {
        "details": "emitted when royalties set for token."
      }
    },
    "kind": "dev",
    "methods": {
      "changeCollectionAuthorizedSignerAddress(address)": {
        "details": "Update the authorized signer address.",
        "params": {
          "_collectionSignerAddress": "new authorized signer address."
        }
      },
      "changeCollectionManager(address)": {
        "details": "Can be called only by the current manager.",
        "params": {
          "_collectionManager": "new manager address."
        }
      },
      "changeCollectionOwner(address)": {
        "details": "Update the authorized signer address.",
        "params": {
          "_collectionOwner": "new authorized signer address."
        }
      },
      "changeContractURI(string)": {
        "details": "Update baseContractURI.",
        "params": {
          "_baseContractURI": "new base contract URI."
        }
      },
      "changeDefaultRoyaltyRatePercentage(uint96)": {
        "details": "setter for defaultRoyaltyRatePercentage",
        "params": {
          "_newDefaultRate": "new default rate for royalty."
        }
      },
      "changeModelFactory(address)": {
        "details": "setter for model factory address.",
        "params": {
          "_newModelFactory": "new Receiver address"
        }
      },
      "changeReceiver(address)": {
        "details": "setter for receiver address.",
        "params": {
          "_newReceiver": "new Receiver address"
        }
      },
      "getContractURIForToken()": {
        "details": "full contract URI based on collection contract.",
        "returns": {
          "_0": "string of full contract uri."
        }
      },
      "getRoyaltyInfo(address)": {
        "details": "royalty info for specific token / collection.It will return custom rate for the token, otherwise will return the default one.",
        "params": {
          "_token": "address of token / collection."
        },
        "returns": {
          "_receiver": "receiver address.",
          "_royaltyRatePercentage": "royalty rate percentage."
        }
      },
      "initialize(address,uint96,address,address,address)": {
        "params": {
          "_defaultRateRoyaltyPercentage": "default royalty percentage.",
          "_receiver": "receiver address."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setRoyaltyRateForCollection(address,uint96,address)": {
        "details": "set royalty rate for specific collection. Support multiple set. The length of array between tokens & rates must exactly the same.",
        "params": {
          "_royaltyRate": "royalty rate.",
          "_token": "token address."
        }
      },
      "setRoyaltyRateForCollections(address[],uint96[],address[])": {
        "details": "set royalty rate for specific collection. Support multiple set. The length of array between tokens & rates must exactly the same.",
        "params": {
          "_royaltyRates": "array of royalty rates.",
          "_tokens": "array of token address."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "changeCollectionManager(address)": {
        "notice": "Setter for manager address."
      },
      "changeDefaultRoyaltyRatePercentage(uint96)": {
        "notice": "the deafult royalty rate can be 0."
      },
      "collectionManager()": {
        "notice": "the authorized address who can change some configuration of collections."
      },
      "initialize(address,uint96,address,address,address)": {
        "notice": "Initialization for upgradeable contract."
      },
      "setRoyaltyRateForCollection(address,uint96,address)": {
        "notice": "the rate will be applied to all of token ids inside the collection.Owner or factory can perform this function call."
      },
      "setRoyaltyRateForCollections(address[],uint96[],address[])": {
        "notice": "the rate will be applied to all of token ids inside the collection.only owner can call the multiple set."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 138,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 141,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 566,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 5187,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "royaltiesSet",
        "offset": 0,
        "slot": "101",
        "type": "t_mapping(t_address,t_struct(RoyaltySet)5181_storage)"
      },
      {
        "astId": 5190,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "defaultRoyaltyRatePercentage",
        "offset": 0,
        "slot": "102",
        "type": "t_uint96"
      },
      {
        "astId": 5193,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "receiver",
        "offset": 12,
        "slot": "102",
        "type": "t_address"
      },
      {
        "astId": 5196,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "modelFactory",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      },
      {
        "astId": 5202,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "collectionManager",
        "offset": 0,
        "slot": "104",
        "type": "t_address"
      },
      {
        "astId": 5205,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "collectionAuthorizedSignerAddress",
        "offset": 0,
        "slot": "105",
        "type": "t_address"
      },
      {
        "astId": 5208,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "collectionOwner",
        "offset": 0,
        "slot": "106",
        "type": "t_address"
      },
      {
        "astId": 5211,
        "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
        "label": "baseContractURI",
        "offset": 0,
        "slot": "107",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(RoyaltySet)5181_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct RoyaltyStorage.RoyaltySet)",
        "numberOfBytes": "32",
        "value": "t_struct(RoyaltySet)5181_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(RoyaltySet)5181_storage": {
        "encoding": "inplace",
        "label": "struct RoyaltyStorage.RoyaltySet",
        "members": [
          {
            "astId": 5176,
            "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
            "label": "isSet",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 5178,
            "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
            "label": "royaltyRateForCollection",
            "offset": 1,
            "slot": "0",
            "type": "t_uint96"
          },
          {
            "astId": 5180,
            "contract": "contracts/royalty/RoyaltyRegistry.sol:RoyaltyRegistry",
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}
